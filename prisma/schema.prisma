generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  username String
  picture  String
  password String?
  email    String?
  bio      String?
  guestId  String?
  friends  String[] @db.ObjectId
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  sentRequests     Request[] @relation("RequestFrom")
  receivedRequests Request[] @relation("RequestTo")
}

model Request {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  fromId String @db.ObjectId
  toId   String @db.ObjectId

  from User @relation("RequestFrom", fields: [fromId], references: [id])
  to   User @relation("RequestTo", fields: [toId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([fromId, toId])
}

model Chat {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt     DateTime  @updatedAt
  createAt      DateTime  @default(now())
  isGroup       Boolean   @default(false)
  members       String[]  @db.ObjectId
  lastMessageAt DateTime?

  messages Message[]
}

model Message {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  timestamp DateTime  @default(now())
  senderId  String    @db.ObjectId
  chatId    String    @db.ObjectId
  chat      Chat      @relation(fields: [chatId], references: [id])
  editedAt  DateTime?
}
