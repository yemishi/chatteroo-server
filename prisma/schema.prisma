generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RequestStatus {
  pending
  accepted
  rejected
}

enum ChatType {
  dm
  group
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  username String
  picture  String
  password String?
  email    String?   @unique
  bio      String?
  isGuest  Boolean   @default(false)
  friends  String[]  @db.ObjectId
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  messages Message[]
  Chat     Chat[]
}

model Chat {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt    DateTime  @updatedAt
  createAt     DateTime  @default(now())
  chatType     ChatType  @default(dm)
  groupId      String?   @db.ObjectId
  group        Group?    @relation(fields: [groupId], references: [id])
  participants String[]  @db.ObjectId
  users        User      @relation(fields: [participants], references: [id])
  messages      Message[]
}

model Group {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  picture String
  bio     String?
  chats   Chat[]
}

type Message {
  text      String
  timestamp DateTime  @default(now())
  senderId  String
  editedAt  DateTime?
}

model Request {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  from      String        @db.ObjectId
  to        String        @db.ObjectId
  status    RequestStatus @default(pending)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([from, to])
}
