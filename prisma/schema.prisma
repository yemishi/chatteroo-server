generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RequestStatus {
  pending
  accepted
  rejected
}

enum ChatType {
  dm
  group
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  username String
  picture  String
  password String?
  email    String?
  bio      String?
  guestId  String?
  friends  String[] @db.ObjectId
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  Chat     Chat[]
}

model Request {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  from      String        @db.ObjectId
  to        String        @db.ObjectId
  status    RequestStatus @default(pending)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([from, to])
}

model Chat {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime  @updatedAt
  createAt  DateTime  @default(now())
  chatType  ChatType  @default(dm)
  members   String[]  @db.ObjectId
  users     User      @relation(fields: [members], references: [id])
  messages  Message[]
}

model Message {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  timestamp DateTime  @default(now())
  senderId  String    @db.ObjectId
  chatId    String    @db.ObjectId
  chat      Chat      @relation(fields: [chatId], references: [id])
  editedAt  DateTime?
}
